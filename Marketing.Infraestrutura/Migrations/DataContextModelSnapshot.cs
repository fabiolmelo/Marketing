// <auto-generated />
using System;
using Marketing.Infraestrutura.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marketing.Infraestrutura.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.16");

            modelBuilder.Entity("ContatoEstabelecimento", b =>
                {
                    b.Property<string>("ContatosTelefone")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("EstabelecimentosCnpj")
                        .HasColumnType("TEXT");

                    b.HasKey("ContatosTelefone", "EstabelecimentosCnpj");

                    b.HasIndex("EstabelecimentosCnpj");

                    b.ToTable("ContatoEstabelecimento");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.Contato", b =>
                {
                    b.Property<string>("Telefone")
                        .HasColumnType("VARCHAR(250)");

                    b.Property<bool>("AceitaMensagem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataAceite")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataRecusa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RecusaMensagem")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Token")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UltimaCompetenciaEnviada")
                        .HasColumnType("TEXT");

                    b.HasKey("Telefone");

                    b.HasIndex("Token")
                        .HasDatabaseName("IX_CONTATO_TOKEN");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.DadosPlanilha", b =>
                {
                    b.Property<int>("ImportacaoEfetuadaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cnpj")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AnoMes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("IncidenciaReal")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Meta")
                        .HasColumnType("TEXT");

                    b.Property<int>("PedidosComCocaCola")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoUnitarioMedio")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ReceitaNaoCapturada")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rede")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Restaurante")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalPedidos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalPedidosNaoCapturados")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ImportacaoEfetuadaId", "Cnpj", "AnoMes");

                    b.ToTable("DadosPlanilha");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.EnvioMensagemMensal", b =>
                {
                    b.Property<DateTime>("Competencia")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContatoTelefone")
                        .HasColumnType("TEXT");

                    b.Property<string>("EstabelecimentoCnpj")
                        .HasColumnType("TEXT");

                    b.Property<string>("MensagemId")
                        .HasColumnType("TEXT");

                    b.HasKey("Competencia", "ContatoTelefone", "EstabelecimentoCnpj");

                    b.ToTable("EnviosMensagemMensais");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.Estabelecimento", b =>
                {
                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RedeNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<string>("UltimoPdfGerado")
                        .HasColumnType("TEXT");

                    b.HasKey("Cnpj");

                    b.HasIndex("RedeNome");

                    b.ToTable("Estabelecimentos");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.ExtratoVendas", b =>
                {
                    b.Property<int>("Ano")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EstabelecimentoCnpj")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Competencia")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CorTransparenteGrafico")
                        .HasPrecision(8, 2)
                        .HasColumnType("NUMERIC");

                    b.Property<decimal>("CorVerdeGrafico")
                        .HasPrecision(8, 2)
                        .HasColumnType("NUMERIC");

                    b.Property<decimal>("CorVermelhaGrafico")
                        .HasPrecision(8, 2)
                        .HasColumnType("NUMERIC");

                    b.Property<decimal>("IncidenciaReal")
                        .HasPrecision(8, 4)
                        .HasColumnType("NUMERIC");

                    b.Property<decimal>("Meta")
                        .HasPrecision(18, 4)
                        .HasColumnType("NUMERIC");

                    b.Property<int>("PedidosComCocaCola")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoUnitarioMedio")
                        .HasPrecision(8, 2)
                        .HasColumnType("NUMERIC");

                    b.Property<decimal>("ReceitaNaoCapturada")
                        .HasPrecision(8, 2)
                        .HasColumnType("NUMERIC");

                    b.Property<int>("TotalPedidos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalPedidosNaoCapturados")
                        .HasColumnType("INTEGER");

                    b.HasKey("Ano", "Mes", "EstabelecimentoCnpj");

                    b.HasIndex("EstabelecimentoCnpj");

                    b.ToTable("ExtratosVendas");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.ImportacaoEfetuada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataImportacao")
                        .HasColumnType("DATETIME");

                    b.Property<string>("NomeArquivoServer")
                        .HasColumnType("VARCHAR(255)");

                    b.HasKey("Id");

                    b.ToTable("ImportacaoEfetuada");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.Rede", b =>
                {
                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Nome");

                    b.ToTable("Redes");
                });

            modelBuilder.Entity("ContatoEstabelecimento", b =>
                {
                    b.HasOne("Marketing.Domain.Entidades.Contato", null)
                        .WithMany()
                        .HasForeignKey("ContatosTelefone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketing.Domain.Entidades.Estabelecimento", null)
                        .WithMany()
                        .HasForeignKey("EstabelecimentosCnpj")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.DadosPlanilha", b =>
                {
                    b.HasOne("Marketing.Domain.Entidades.ImportacaoEfetuada", "ImportacaoEfetuada")
                        .WithMany("DadosPlanilha")
                        .HasForeignKey("ImportacaoEfetuadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportacaoEfetuada");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.Estabelecimento", b =>
                {
                    b.HasOne("Marketing.Domain.Entidades.Rede", "Rede")
                        .WithMany("Estabelecimentos")
                        .HasForeignKey("RedeNome")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rede");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.ExtratoVendas", b =>
                {
                    b.HasOne("Marketing.Domain.Entidades.Estabelecimento", "Estabelecimento")
                        .WithMany("ExtratoVendas")
                        .HasForeignKey("EstabelecimentoCnpj")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estabelecimento");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.Estabelecimento", b =>
                {
                    b.Navigation("ExtratoVendas");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.ImportacaoEfetuada", b =>
                {
                    b.Navigation("DadosPlanilha");
                });

            modelBuilder.Entity("Marketing.Domain.Entidades.Rede", b =>
                {
                    b.Navigation("Estabelecimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
